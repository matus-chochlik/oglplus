//  File implement/oglplus/enums/texture_target_bq.ipp
//
//  Automatically generated file, DO NOT modify manually.
//  Edit the source 'source/enums/oglplus/texture_target.txt'
//  or the 'source/enums/make_enum.py' script instead.
//
//  Copyright 2010-2015 Matus Chochlik.
//  Distributed under the Boost Software License, Version 1.0.
//  See accompanying file LICENSE_1_0.txt or copy at
//  http://www.boost.org/LICENSE_1_0.txt
//

#if defined GL_TEXTURE_1D && defined GL_TEXTURE_BINDING_1D
case GL_TEXTURE_1D:
	return GL_TEXTURE_BINDING_1D;
#endif
#if defined GL_TEXTURE_2D && defined GL_TEXTURE_BINDING_2D
case GL_TEXTURE_2D:
	return GL_TEXTURE_BINDING_2D;
#endif
#if defined GL_TEXTURE_3D && defined GL_TEXTURE_BINDING_3D
case GL_TEXTURE_3D:
	return GL_TEXTURE_BINDING_3D;
#endif
#if defined GL_TEXTURE_1D_ARRAY && defined GL_TEXTURE_BINDING_1D_ARRAY
case GL_TEXTURE_1D_ARRAY:
	return GL_TEXTURE_BINDING_1D_ARRAY;
#endif
#if defined GL_TEXTURE_2D_ARRAY && defined GL_TEXTURE_BINDING_2D_ARRAY
case GL_TEXTURE_2D_ARRAY:
	return GL_TEXTURE_BINDING_2D_ARRAY;
#endif
#if defined GL_TEXTURE_RECTANGLE && defined GL_TEXTURE_BINDING_RECTANGLE
case GL_TEXTURE_RECTANGLE:
	return GL_TEXTURE_BINDING_RECTANGLE;
#endif
#if defined GL_TEXTURE_BUFFER && defined GL_TEXTURE_BINDING_BUFFER
case GL_TEXTURE_BUFFER:
	return GL_TEXTURE_BINDING_BUFFER;
#endif
#if defined GL_TEXTURE_CUBE_MAP && defined GL_TEXTURE_BINDING_CUBE_MAP
case GL_TEXTURE_CUBE_MAP:
	return GL_TEXTURE_BINDING_CUBE_MAP;
#endif
#if defined GL_TEXTURE_CUBE_MAP_ARRAY && defined GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
case GL_TEXTURE_CUBE_MAP_ARRAY:
	return GL_TEXTURE_BINDING_CUBE_MAP_ARRAY;
#endif
#if defined GL_TEXTURE_2D_MULTISAMPLE && defined GL_TEXTURE_BINDING_2D_MULTISAMPLE
case GL_TEXTURE_2D_MULTISAMPLE:
	return GL_TEXTURE_BINDING_2D_MULTISAMPLE;
#endif
#if defined GL_TEXTURE_2D_MULTISAMPLE_ARRAY && defined GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
case GL_TEXTURE_2D_MULTISAMPLE_ARRAY:
	return GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY;
#endif
#if defined GL_TEXTURE_CUBE_MAP_POSITIVE_X && defined GL_TEXTURE_BINDING_CUBE_MAP
case GL_TEXTURE_CUBE_MAP_POSITIVE_X:
	return GL_TEXTURE_BINDING_CUBE_MAP;
#endif
#if defined GL_TEXTURE_CUBE_MAP_NEGATIVE_X && defined GL_TEXTURE_BINDING_CUBE_MAP
case GL_TEXTURE_CUBE_MAP_NEGATIVE_X:
	return GL_TEXTURE_BINDING_CUBE_MAP;
#endif
#if defined GL_TEXTURE_CUBE_MAP_POSITIVE_Y && defined GL_TEXTURE_BINDING_CUBE_MAP
case GL_TEXTURE_CUBE_MAP_POSITIVE_Y:
	return GL_TEXTURE_BINDING_CUBE_MAP;
#endif
#if defined GL_TEXTURE_CUBE_MAP_NEGATIVE_Y && defined GL_TEXTURE_BINDING_CUBE_MAP
case GL_TEXTURE_CUBE_MAP_NEGATIVE_Y:
	return GL_TEXTURE_BINDING_CUBE_MAP;
#endif
#if defined GL_TEXTURE_CUBE_MAP_POSITIVE_Z && defined GL_TEXTURE_BINDING_CUBE_MAP
case GL_TEXTURE_CUBE_MAP_POSITIVE_Z:
	return GL_TEXTURE_BINDING_CUBE_MAP;
#endif
#if defined GL_TEXTURE_CUBE_MAP_NEGATIVE_Z && defined GL_TEXTURE_BINDING_CUBE_MAP
case GL_TEXTURE_CUBE_MAP_NEGATIVE_Z:
	return GL_TEXTURE_BINDING_CUBE_MAP;
#endif
